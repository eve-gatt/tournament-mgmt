extends ../../layout/tournament-layout

block append styles
    style.
        .widgets {
            display: grid;
            grid: auto-flow / 1fr 1fr 1fr;
            gap: 12px;
        }

        .widget {
            display: grid;
            grid: auto auto / auto;
        }

        .widget h3 {
            place-items: center;
        }

        .widget .w {
            justify-self: stretch;
            align-self: start;
        }

        .w.clear {
            font-size: 2em;
            text-align: center;
        }

        .w {
            --padding: 20px 15px;
            font-size: 0.5em;
            cursor: pointer;
            /*transform: scale(0.5);*/
            /*transform-origin: left top;*/
        }

        .tick {
            font-size: 2em;
        }

    link(rel="stylesheet" href="/css/5.css")

block content
    - var uuid = tournament.getString("uuid")

    mixin subtitle("Stream Deck")

    a(href=streamerOverlayUrl, target="_blank") preview full size/stream overlay url

    h2 Current match
    .widgets
        each w in widgets
            .widget
                h3= w.getString("label")
                .w(class=w.getString("name"))

block scripts
    - var uuid = tournament.getString("uuid")
    script(src='/js/stream/5.js')
    script(src='https://unpkg.com/d3-sankey@0')
    script(src='/js/stream/sankey.js')
    script(src='/js/stream/line-chart.js')
    script(src='/js/stream/stacked-chart.js')
    script.
        var eb = new EventBus("/ws");
        eb.enableReconnect(true);

        function requestWidget(colour) {
            eb.publish('streamer.widget-request', {colour: colour});
        }

    each w in widgets
        var widgetName = w.getString("name")
        case w.getString("type")
            when "CLEAR"
                script.
                    d3.select('.#{widgetName}')
                        .text('clear')
                        .on('click', e => eb.publish('streamer.widget-clear'));
            when "TEAM_HISTORY"
                script.
                    var selector = '.#{w.getString("colour")}TeamHistory';
                    d3.select(selector).on('click', e => requestWidget('#{w.getString("colour")}'));
                    streamInit5(selector, '#{w.getString("colour")}');
            when "SANKEY"
                script.
                    streamInitSankey('.#{widgetName}');
            when "LINE"
                script.
                    streamInitLineChart('.#{widgetName}');
            when "STACKED"
                script.
                    streamInitStackedChart('.#{widgetName}', ' / stream /#{widgetName}/data', '#{w.getString("grouper")}', '#{w.getString("sublabel")}');
